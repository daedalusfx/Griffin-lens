# نام Workflow که در تب Actions گیت‌هاب نمایش داده می‌شود
name: Build & Release Executables

# تریگرها: این Workflow چه زمانی اجرا شود؟
# نسخه اصلاح‌شده: ترکیب تریگرها زیر یک کلید on
on:
  push:
    branches:
      - main
      - master
    tags:
      - 'v*.*.*' # مثلا v1.0, v1.2.3

# تعریف Job ها (مراحل اجرایی)
jobs:
  # --- Job اول: ساخت فایل‌های اجرایی ---
  build:
    # نام Job
    name: Build Executable for ${{ matrix.os }}
    # این Job روی چه سیستم‌عامل‌هایی اجرا شود؟ (ماتریکس برای اجرای موازی)
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    # مراحل اجرای Job
    steps:
      # 1. چک‌اوت کردن کد پروژه از گیت‌هاب
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. نصب و راه‌اندازی پایتون
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # 3. نصب وابستگی‌های پروژه و PyInstaller
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      # 4. ساخت فایل اجرایی با PyInstaller
      - name: Build with PyInstaller
        run: |
          pyinstaller main.py --name "Griffin-lens-Server" --onefile --noconsole \
          --hidden-import="uvicorn.lifespan.on" \
          --hidden-import="uvicorn.loops.auto" \
          --hidden-import="uvicorn.protocols.http.auto" \
          --add-data="config.py:."

      # 5. آماده‌سازی آرتیفکت برای آپلود
      - name: Package executable
        shell: bash
        run: |
          # ایجاد یک پوشه برای خروجی
          mkdir release
          # کپی کردن فایل اجرایی به پوشه release
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            mv dist/Griffin-lens-Server.exe release/
          else
            mv dist/Griffin-lens-Server release/
          fi
          # کپی کردن فایل‌های دیگر در صورت نیاز (مثلا README)
          cp README.md release/

      # 6. آپلود فایل اجرایی به عنوان آرتیفکت گیت‌هاب
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: griffin-server-${{ matrix.os }}
          path: release/

  # --- Job دوم: ساخت Release در گیت‌هاب (فقط برای تگ‌ها) ---
  release:
    # این Job فقط زمانی اجرا می‌شود که یک تگ جدید ایجاد شود
    if: startsWith(github.ref, 'refs/tags/')
    # این Job به Job بالا (build) وابسته است و بعد از آن اجرا می‌شود
    needs: build
    name: Create GitHub Release
    runs-on: ubuntu-latest
    
    steps:
      # 1. دانلود تمام آرتیفکت‌های ساخته شده (برای ویندوز، لینوکس و مک)
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      # 2. فشرده‌سازی هر آرتیفکت به صورت جداگانه
      - name: Zip artifacts
        run: |
          for dir in artifacts/*; do
            zip -r "${dir}.zip" "$dir"
          done
      
      # 3. ساخت Release جدید در گیت‌هاب
      - name: Create Release and upload assets
        uses: softprops/action-gh-release@v1
        with:
          # استفاده از محتوای تگ به عنوان نام Release
          name: Release ${{ github.ref_name }}
          # فایل‌های فشرده شده را به Release ضمیمه می‌کند
          files: |
            artifacts/*.zip
